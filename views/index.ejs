<!DOCTYPE HTML>
<html>
    <head>
        <%- include("partials/header") %>
    </head>

    <body>
        <%- include('partials/navbar') %>
        <div class='container'>
            
        
        <div class="tile is-ancestor">
            
            <div class="tile is-7 is-vertical is-parent">
                <p>There are currently <span id="numUsers">no</span> users </p>
                
                <div class="tile is-child">
                    <iframe id="player"
                        width="640" height="360"
                        src="https://www.youtube.com/embed/M7lc1UVf-VE?enablejsapi=1">
                    </iframe>

                </div>

                <div class"tile is-child">
                    <button id="authorize-button" class="button" style="display: none;">Authorize</button>
                    <button id="signout-button" class="button" style="display: none;">Sign Out</button>
                    <pre id="content"></pre>
                </div>

                <script type="text/javascript">
                    // Client ID and API key from the Developer Console
                    var CLIENT_ID = '925927241615-co4f9t9tgmvr8t84a7m06najfaesb13j.apps.googleusercontent.com';
                    // Array of API discovery doc URLs for APIs used by the quickstart
                    var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest"];
                    // Authorization scopes required by the API. If using multiple scopes,
                    // separated them with spaces.
                    var SCOPES = 'https://www.googleapis.com/auth/youtube.readonly';
                    var authorizeButton = document.getElementById('authorize-button');
                    var signoutButton = document.getElementById('signout-button');
                    /**
                     *  On load, called to load the auth2 library and API client library.
                     */
                    function handleClientLoad() {
                      gapi.load('client:auth2', initClient);
                    }
                    /**
                     *  Initializes the API client library and sets up sign-in state
                     *  listeners.
                     */
                    function initClient() {
                      gapi.client.init({
                        discoveryDocs: DISCOVERY_DOCS,
                        clientId: CLIENT_ID,
                        scope: SCOPES
                      }).then(function () {
                        // Listen for sign-in state changes.
                        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
                        // Handle the initial sign-in state.
                        updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
                        authorizeButton.onclick = handleAuthClick;
                        signoutButton.onclick = handleSignoutClick;
                      });
                    }
                    /**
                     *  Called when the signed in status changes, to update the UI
                     *  appropriately. After a sign-in, the API is called.
                     */
                    function updateSigninStatus(isSignedIn) {
                      if (isSignedIn) {
                        authorizeButton.style.display = 'none';
                        signoutButton.style.display = 'block';
                        getChannel();
                      } else {
                        authorizeButton.style.display = 'block';
                        signoutButton.style.display = 'none';
                      }
                    }
                    /**
                     *  Sign in the user upon button click.
                     */
                    function handleAuthClick(event) {
                      gapi.auth2.getAuthInstance().signIn();
                    }
                    /**
                     *  Sign out the user upon button click.
                     */
                    function handleSignoutClick(event) {
                      gapi.auth2.getAuthInstance().signOut();
                    }
                    /**
                     * Append text to a pre element in the body, adding the given message
                     * to a text node in that element. Used to display info from API response.
                     *
                     * @param {string} message Text to be placed in pre element.
                     */
                    function appendPre(message) {
                      var pre = document.getElementById('content');
                      var textContent = document.createTextNode(message + '\n');
                      pre.appendChild(textContent);
                    }
                    /**
                     * Print files.
                     */
                    function getChannel() {
                      gapi.client.youtube.channels.list({
                        'part': 'snippet,contentDetails,statistics',
                        'forUsername': 'GoogleDevelopers'
                      }).then(function(response) {
                        var channel = response.result.items[0];
                        appendPre('This channel\'s ID is ' + channel.id + '. ' +
                                  'Its title is \'' + channel.snippet.title + ', ' +
                                  'and it has ' + channel.statistics.viewCount + ' views.');
                      });
                    }
                  </script>

                <script async defer src="https://apis.google.com/js/api.js" onload="this.onload=function(){};handleClientLoad()" onreadystatechange="if (this.readyState === 'complete') this.onload()">
                </script>



            </div>
                
            <div class="tile is-5 is-vertical is-parent">
                
                <div class="tile is-child">
                    <div class='search area'>
                            <%- include("partials/search",{sRes:null}) %>
                    </div>
                   
                    <div class="index_reload">
                        <!--index_reload-->
                        <div id="chat_area">
                            <!--chat_box-->
                            <div class="chat_box main_chat2 hide_wrap_box" id="chat_id">
                            <!--chat_box-->
                            
                            <div class="user_box">
                                <div class="name open_chat2 left">Chat</div>
                                <div class="closed2 right" id="icon">^ &nbsp;</div>
                                <div class="clear"></div>
                            </div>
                            
                            <div class="wrap_box2" style="display:none">
                                <!--wrap_box-->
                                <div class="message_content">
                                    <div class="tile" id='chat-stream'></div>
                            
                                    <div class="field">
                                        <label class="label">Type a message here:</label>
                                        <div class="control">
                                            <input class="input chat-input" placeholder="Type a message here..."></input>
                                        </div>
                                    </div>
                                        
                                    <div class="control">
                                        <button class="button is-primary send-message">Send</button>
                                    </div>
                                </div>
                                                                          
                            </div> <!--wrap_box-->
                        </div> <!--chat_box-->
                    </div>
                  
                </div> <!--index_reload-->
            </div>
               

                <div class="tile is-child">
                    
                </div>


                </div>
                   
            </div>

        </div>
        
            
                
                
        </div>
    
    </body>
</html>